Класс Router

Дана переменная экземпляра @routes (пустой хэш).
Класс Router определяет метод init. Внутри этого метода:
Вызывается метод resources (который принимает два параметра: класс и ключевое слово) для класса PostsController по ключевому слову «posts»;
Внутри метода resources создается экземпляр класса, и в соответствии с запросом пользователя resources выполняет команды (сохраненные в хэше @routes), которые уже определены в методах класса PostsController;
Далее в методе init запускается цикл, в котором пользователю предлагается выбрать то, с чем взаимодействовать: (1 — сообщения, 2 — комментарии) / «q» для выхода;
Если пользовател ввел '1', вызывается метод PostsController.connection с соответствующими значениями из @routes;
Цикл продолжается, пока пользователь не выйдет, введя 'q';
Программа прощается с пользователем.

Класс PostsController 

В класс наследуется модуль Resource при помощи extend.
Задается переменная экземпляра @posts(пустой массив).
Далее в классе определено несколько методов:
index: выводит список всех постов в памяти вместе с их индексами;
show: запрашивает у пользователя идентификатор поста и отображает соответствующий пост или выдает сообщение об ошибке;
create: запрашивает у пользователя текст поста, добавляет его в массив и отображает содержимое добавленного сообщения вместе с идентификатором;
update: запрашивает у пользователя идентификатор сообщения и новый текст, обновляет сообщение и отображает измененное сообщение;
уничтожить: запрашивает у пользователя идентификатор поста и удаляет его из массива;
Также в класс передано два приватных метода gets_with_output и gets_index_with_output для получения значений(индекс\текст поста) от пользователя.

Модуль Resource

Модуль Resource наследуется классом PostsController определяет метод с connection, который принимает параметр routes.
Он проверяет, является ли параметр значением nil, если да, то выхдит из метода.
Внутри цикла пользователю предлагается выбрать глагол (GET/POST/PUT/DELETE) или 'q' для выхода.
Если выбрана команда «GET», она предлагает пользователю выбрать действие (index/show) или «q» для выхода.
На основе выбранного глагола и действия (если можно применить) он вызывает соответствующий/е метод/ы из маршрутов, используя символы глагола и действия.